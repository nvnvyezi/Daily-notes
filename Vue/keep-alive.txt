Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-06-12T00:38:32+08:00

====== keep-alive ======
创建日期 星期二 12 六月 2018

> keep-alive是Vue.js的一个内置组件。它能够不活动的组件实例保存在内存中，而不是直接将其销毁，它是一个抽象组件，不会被渲染到真实DOM中，也不会出现在父组件链中。

* include: 字符串或正则表达式。只有匹配的组件会被缓存。
* exclude: 字符串或正则表达式。任何匹配的组件都不会被缓存。
	__<keep-alive include="test-keep-alive">__
	__  <!-- 将缓存name为test-keep-alive的组件 -->__
	__  <component></component>__
	__</keep-alive>__
	
	__<keep-alive include="a,b">__
	__  <!-- 将缓存name为a或者b的组件，结合动态组件使用 -->__
	__  <component :is="view"></component>__
	__</keep-alive>__
	
	__<!-- 使用正则表达式，需使用v-bind -->__
	__<keep-alive :include="/a|b/">__
	__  <component :is="view"></component>__
	__</keep-alive>__
	
	__<!-- 动态判断 -->__
	__<keep-alive :include="includedComponents">__
	__  <router-view></router-view>__
	__</keep-alive>__
	
	__<keep-alive exclude="test-keep-alive">__
	__  <!-- 将不缓存name为test-keep-alive的组件 -->__
	__  <component></component>__
	__</keep-alive>__
	
	
https://www.jianshu.com/p/0b0222954483

**默认显示 A**
**B 跳到 A，A 不刷新**
**C 跳到 A，A 刷新**

	__{__
	__        path: '/',__
	__        name: 'A',__
	__        component: A,__
	__        meta: {__
	__            keepAlive: true // 需要被缓存__
	__        }__
	__}__
	
	__export default {__
	__        data() {__
	__            return {};__
	__        },__
	__        methods: {},__
	__        beforeRouteLeave(to, from, next) {__
	__             // 设置下一个路由的 meta__
	__            to.meta.keepAlive = true;  // 让 A 缓存，即不刷新__
	__            next();__
	__        }__
	__};__

	__export default {__
	__        data() {__
	__            return {};__
	__        },__
	__        methods: {},__
	__        beforeRouteLeave(to, from, next) {__
	__            // 设置下一个路由的 meta__
	__            to.meta.keepAlive = false; // 让 A 不缓存，即刷新__
	__            next();__
	__        }__
	__};__

> 当组件在 <keep-alive> 内被切换，它的 activated 和 deactivated 这两个生命周期钩子函数将会被对应执行。

> 在 2.2.0 及其更高版本中，activated 和 deactivated 将会在 <keep-alive> 树内的所有嵌套组件中触发。

